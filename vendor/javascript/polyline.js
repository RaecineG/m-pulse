var e={};var r={};function encode(e,r){e=Math.round(e*r);e<<=1;e<0&&(e=~e);var n="";while(e>=32){n+=String.fromCharCode((32|31&e)+63);e>>=5}n+=String.fromCharCode(e+63);return n}r.decode=function(e,r){var n=0,o=0,t=0,i=[],d=0,a=0,u=null,c,h,f=Math.pow(10,r||5);while(n<e.length){u=null;d=0;a=0;do{u=e.charCodeAt(n++)-63;a|=(31&u)<<d;d+=5}while(u>=32);c=1&a?~(a>>1):a>>1;d=a=0;do{u=e.charCodeAt(n++)-63;a|=(31&u)<<d;d+=5}while(u>=32);h=1&a?~(a>>1):a>>1;o+=c;t+=h;i.push([o/f,t/f])}return i};r.encode=function(e,r){if(!e.length)return"";var n=Math.pow(10,r||5),o=encode(e[0][0],n)+encode(e[0][1],n);for(var t=1;t<e.length;t++){var i=e[t],d=e[t-1];o+=encode(i[0]-d[0],n);o+=encode(i[1]-d[1],n)}return o};function flipped(e){var r=[];for(var n=0;n<e.length;n++)r.push(e[n].slice().reverse());return r}r.fromGeoJSON=function(e,n){e&&"Feature"===e.type&&(e=e.geometry);if(!e||"LineString"!==e.type)throw new Error("Input must be a GeoJSON LineString");return r.encode(flipped(e.coordinates),n)};r.toGeoJSON=function(e,n){var o=r.decode(e,n);return{type:"LineString",coordinates:flipped(o)}};e&&(e=r);var n=e;export default n;

